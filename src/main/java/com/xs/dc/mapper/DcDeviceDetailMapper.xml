<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xs.dc.dao.DcDeviceDetailMapper" >
  <resultMap id="BaseResultMap" type="com.xs.dc.bean.DcDeviceDetail" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="org_code" property="orgCode" jdbcType="VARCHAR" />
    <result column="device_name" property="deviceName" jdbcType="VARCHAR" />
    <result column="device_ip" property="deviceIp" jdbcType="VARCHAR" />
    <result column="ping_status" property="pingStatus" jdbcType="VARCHAR" />
    <result column="ping_avg" property="pingAvg" jdbcType="VARCHAR" />
    <result column="ping_loss" property="pingLoss" jdbcType="VARCHAR" />
    <result column="telnet_status" property="telnetStatus" jdbcType="VARCHAR" />
    <result column="fresh_time" property="freshTime" jdbcType="VARCHAR" />
    <result column="memory" property="memory" jdbcType="VARCHAR" />
    <result column="cpu" property="cpu" jdbcType="VARCHAR" />
    <result column="disk" property="disk" jdbcType="VARCHAR" />
    <result column="process" property="process" jdbcType="VARCHAR" />
    <result column="prt_info" property="prtInfo" jdbcType="VARCHAR" />
    <result column="warn" property="warn" jdbcType="VARCHAR" />
     <result column="remote_ip" property="remoteIp" jdbcType="VARCHAR" />
      <result column="login_name" property="loginName" jdbcType="VARCHAR" />
       <result column="login_pwd" property="loginPwd" jdbcType="VARCHAR" />
        <result column="remote_port" property="remotePort" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, org_code, device_name, device_ip, ping_status, ping_avg, ping_loss, telnet_status, 
    fresh_time, memory, cpu, disk, process, prt_info, remote_ip, login_name, login_pwd, remote_port
  </sql>

  <select id="deviceDetailList" parameterType="string" resultMap="BaseResultMap">
  	select *,max(fresh_time) as maxtime
	from dc_device_detail
	where 1=1 and !ISNULL(warn)
  	<if test="deviceName != '' and deviceName != null" >
  		and device_name=#{deviceName}
  	</if>
  	<if test="warn !='' and warn != null" >
  		and warn=#{warn}
  	</if>
  	GROUP BY org_code,device_ip
  </select>
  
  <select id="deviceDetailLists" parameterType="string" resultMap="BaseResultMap">
  	select *,max(fresh_time) as maxtime
	from dc_device_detail
	where 1=1 and !ISNULL(warn) and org_code in (SELECT org_code FROM t_org where areaIndex LIKE concat(#{areaCode},'%'))
  	<if test="deviceName != '' and deviceName != null" >
  		and device_name=#{deviceName}
  	</if>
  	<if test="warn !='' and warn != null" >
  		and warn=#{warn}
  	</if>
  	GROUP BY org_code,device_ip
  </select>
  
  <select id="selectDetailList" parameterType="string" resultMap="BaseResultMap">
  	select * from dc_device_detail where 1=1
  	<if test="orgCode != '' and orgCode != null" >
  		and org_code=#{orgCode}
  	</if>
  	<if test="deviceIp !='' and deviceIp != null" >
  		and device_ip=#{deviceIp}
  	</if>
  	<if test="begTime !='' and begTime != null" >
  		and fresh_time>=#{begTime}
  	</if>
  	<if test="endTime !='' and endTime != null" >
  		 <![CDATA[ and fresh_time<=#{endTime}]]>
  	</if>
  	order by fresh_time asc
  </select>
  <insert id="insertDeviceDetail" parameterType="com.xs.dc.bean.DcDeviceDetail">
  	insert into dc_device_detail(org_code,device_name,device_ip,ping_status,ping_avg,ping_loss,telnet_status,fresh_time,memory,cpu,warn)
  	values(#{orgCode},#{deviceName},#{deviceIp},#{pingStatus},#{pingAvg},#{pingLoss},#{telnetStatus},#{freshTime},#{memory},#{cpu},#{warn})
  </insert>
  <delete id="delDeviceDetail" parameterType="string">
  		delete from dc_device_detail where 1=1 <![CDATA[ and fresh_time<=#{dateTime}]]>
  </delete>
  
  <update id="updateDeviceDetail" parameterType="com.xs.dc.bean.DcDeviceDetail">
  		update dc_device_detail
  	<set >
      <if test="remoteIp != null" >
        remote_ip = #{remoteIp,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPwd != null" >
        login_pwd = #{loginPwd,jdbcType=VARCHAR},
      </if>
      <if test="remotePort != null" >
        remote_port = #{remotePort,jdbcType=VARCHAR}
      </if>
    </set> 
     where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>